// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/sort/sort.proto

package grpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SortRequest struct {
	TableToSort          []int32  `protobuf:"varint,1,rep,packed,name=tableToSort,proto3" json:"tableToSort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SortRequest) Reset()         { *m = SortRequest{} }
func (m *SortRequest) String() string { return proto.CompactTextString(m) }
func (*SortRequest) ProtoMessage()    {}
func (*SortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b2529e0ff3b5462, []int{0}
}

func (m *SortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SortRequest.Unmarshal(m, b)
}
func (m *SortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SortRequest.Marshal(b, m, deterministic)
}
func (m *SortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortRequest.Merge(m, src)
}
func (m *SortRequest) XXX_Size() int {
	return xxx_messageInfo_SortRequest.Size(m)
}
func (m *SortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SortRequest proto.InternalMessageInfo

func (m *SortRequest) GetTableToSort() []int32 {
	if m != nil {
		return m.TableToSort
	}
	return nil
}

type Response struct {
	Sorted               bool     `protobuf:"varint,1,opt,name=sorted,proto3" json:"sorted,omitempty"`
	SortedTable          []int32  `protobuf:"varint,2,rep,packed,name=sortedTable,proto3" json:"sortedTable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b2529e0ff3b5462, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetSorted() bool {
	if m != nil {
		return m.Sorted
	}
	return false
}

func (m *Response) GetSortedTable() []int32 {
	if m != nil {
		return m.SortedTable
	}
	return nil
}

func init() {
	proto.RegisterType((*SortRequest)(nil), "grpc.SortRequest")
	proto.RegisterType((*Response)(nil), "grpc.Response")
}

func init() { proto.RegisterFile("proto/sort/sort.proto", fileDescriptor_3b2529e0ff3b5462) }

var fileDescriptor_3b2529e0ff3b5462 = []byte{
	// 169 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0xce, 0x2f, 0x2a, 0x01, 0x13, 0x7a, 0x60, 0xbe, 0x10, 0x4b, 0x7a, 0x51, 0x41,
	0xb2, 0x92, 0x3e, 0x17, 0x77, 0x70, 0x7e, 0x51, 0x49, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89,
	0x90, 0x02, 0x17, 0x77, 0x49, 0x62, 0x52, 0x4e, 0x6a, 0x48, 0x3e, 0x48, 0x54, 0x82, 0x51, 0x81,
	0x59, 0x83, 0x35, 0x08, 0x59, 0x48, 0xc9, 0x85, 0x8b, 0x23, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf,
	0x38, 0x55, 0x48, 0x8c, 0x8b, 0x0d, 0x64, 0x60, 0x6a, 0x8a, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x47,
	0x10, 0x94, 0x07, 0x32, 0x05, 0xc2, 0x0a, 0x01, 0x69, 0x94, 0x60, 0x82, 0x98, 0x82, 0x24, 0x64,
	0x64, 0xcb, 0xc5, 0x07, 0x32, 0x2d, 0x33, 0x2f, 0x3d, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55,
	0x48, 0x9b, 0x8b, 0x05, 0x24, 0x22, 0x24, 0xa8, 0x07, 0x72, 0x97, 0x1e, 0x92, 0xa3, 0xa4, 0xf8,
	0x20, 0x42, 0x30, 0x6b, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x5e, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x3a, 0x3d, 0xf5, 0x52, 0xdb, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for SortingService service

type SortingServiceClient interface {
	Sort(ctx context.Context, in *SortRequest, opts ...client.CallOption) (*Response, error)
}

type sortingServiceClient struct {
	c           client.Client
	serviceName string
}

func NewSortingServiceClient(serviceName string, c client.Client) SortingServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "grpc"
	}
	return &sortingServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *sortingServiceClient) Sort(ctx context.Context, in *SortRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "SortingService.Sort", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SortingService service

type SortingServiceHandler interface {
	Sort(context.Context, *SortRequest, *Response) error
}

func RegisterSortingServiceHandler(s server.Server, hdlr SortingServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&SortingService{hdlr}, opts...))
}

type SortingService struct {
	SortingServiceHandler
}

func (h *SortingService) Sort(ctx context.Context, in *SortRequest, out *Response) error {
	return h.SortingServiceHandler.Sort(ctx, in, out)
}
